import React, { useState } from "react";
import "../App.css";

function Settings({ user, logout, onMenuClick }) {
  // Props ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶°‡ßá‡¶ü‡¶æ ‡¶¶‡¶ø‡ßü‡ßá ‡¶∏‡ßç‡¶ü‡ßá‡¶ü ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡ßü‡¶æ‡¶≤‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡¶æ
  const [name, setName] = useState(user.name);
  const [email, setEmail] = useState(user.email);
  const [message, setMessage] = useState("");

  // Update user profile
  const handleSave = async () => {
    // üîë ‡¶∏‡ßÅ‡¶∞‡¶ï‡ßç‡¶∑‡¶æ: ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ‡¶∏‡ßç‡¶ü‡ßã‡¶∞‡ßá‡¶ú ‡¶•‡ßá‡¶ï‡ßá JWT ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶®‡ßá‡¶ì‡ßü‡¶æ
    const token = localStorage.getItem("jwtToken");

    try {
      // API Endpoints: ‡¶™‡ßã‡¶∞‡ßç‡¶ü 8080 ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶è‡¶¨‡¶Ç JWT Header ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
      const res = await fetch(`http://localhost:8080/users/${user.id}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
          // ‡¶ü‡ßã‡¶ï‡ßá‡¶®‡¶ü‡¶ø Authorization Header-‡¶è ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
          "Authorization": `Bearer ${token}`, 
        },
        body: JSON.stringify({ name, email }),
      });

      if (res.ok) {
        setMessage("Profile updated successfully!");
        // ‡¶Ø‡¶¶‡¶ø ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶π‡ßü, ‡¶è‡¶ñ‡¶æ‡¶®‡ßá user prop-‡¶è‡¶∞ ‡¶°‡ßá‡¶ü‡¶æ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶≤‡¶ú‡¶ø‡¶ï ‡¶≤‡¶ø‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®
      } else if (res.status === 401) {
         setMessage("Update failed. Please login again."); // JWT ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶≠‡ßÅ‡¶≤ ‡¶¨‡¶æ ‡¶Æ‡ßá‡ßü‡¶æ‡¶¶ ‡¶â‡¶§‡ßç‡¶§‡ßÄ‡¶∞‡ßç‡¶£ ‡¶π‡¶≤‡ßá
      } else {
        setMessage("Failed to update profile.");
      }
      setTimeout(() => setMessage(""), 3000);
    } catch (err) {
      console.error(err);
      setMessage("Error updating profile. Check server status.");
      setTimeout(() => setMessage(""), 3000);
    }
  };

  return (
    <div className="dashboard">
      {/* Sidebar */}
      <div className="sidebar">
        <div className="logo">TradeShift</div>
        <ul className="menu">
          <li onClick={() => onMenuClick("dashboard")}>Portfolio</li>
          <li onClick={() => onMenuClick("orders")}>Orders</li>
          <li onClick={() => onMenuClick("analytics")}>Analytics</li>
          <li onClick={() => onMenuClick("settings")}>Settings</li>
        </ul>
      </div>

      {/* Main content */}
      <div className="settings-container">
        <div className="settings-box">
          <h2>User Profile</h2>

          <div className="profile-card">
            <label>
              <strong>Name:</strong>
              <input
                type="text"
                value={name}
                onChange={(e) => setName(e.target.value)}
              />
            </label>

            <label>
              <strong>Email:</strong>
              {/* ‡¶á‡¶Æ‡ßá‡¶≤ ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£‡¶§ ‡¶è‡¶°‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü ‡¶®‡¶æ, ‡¶§‡¶æ‡¶á ‡¶è‡¶ü‡¶ø disabled ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶Ø‡ßá‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá */}
              <input
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                disabled
              />
            </label>

            <button className="save-btn" onClick={handleSave}>
              Save Changes
            </button>
            {message && <div className="message">{message}</div>}
          </div>

          <button className="logout-btn" onClick={logout}>
            Logout
          </button>
        </div>
      </div>
    </div>
  );
}

export default Settings;
